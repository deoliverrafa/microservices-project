name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Test Controller Service
      run: |
        cd controller
        ./mvnw clean test
    
    - name: Test Catalog Service
      run: |
        cd model
        ./mvnw clean test
    
    - name: Install Frontend Dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Test Frontend
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false
    
    - name: Build Frontend
      run: |
        cd frontend
        npm run build

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Controller Service
      uses: docker/build-push-action@v4
      with:
        context: ./controller
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/microservices-controller:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Catalog Service
      uses: docker/build-push-action@v4
      with:
        context: ./model
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/microservices-catalog:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/microservices-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Production
      run: |
        echo "Deployment would happen here"
        echo "In a real scenario, this would:"
        echo "1. Connect to production server"
        echo "2. Pull latest images"
        echo "3. Update docker-compose.yml"
        echo "4. Restart services"
        echo "5. Run health checks"
